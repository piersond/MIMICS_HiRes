# Put all plotsa together in a matrix
mplot <- ggarrange(pRMSE, pr2, pTau_x, pCUE_x, pDesorb_x, pFPHYS_x, pVslope_x, pVint_x, pKslope_x, ncol=2, nrow=5, common.legend = TRUE, legend="bottom")
mplot
### Save matrix plot
ggsave(plot=mplot, filename = "MCMC_results_matrix.jpeg", width = 7, height = 9 , dpi = 600)
ggthemr('light', type='outer')
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + scale_colour_ggthemr_d() #+ theme_minimal() +
#scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pr2 <- ggplot(MCMC, aes(x=iter, y=r2, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pTau_x <- ggplot(MCMC, aes(x=iter, y=Tau_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pCUE_x <-ggplot(MCMC, aes(x=iter, y=CUE_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pDesorb_x <- ggplot(MCMC, aes(x=iter, y=desorb_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pFPHYS_x <- ggplot(MCMC, aes(x=iter, y=fPHYS_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pVslope_x <- ggplot(MCMC, aes(x=iter, y=Vslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pVint_x <- ggplot(MCMC, aes(x=iter, y=Vint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pKslope_x <- ggplot(MCMC, aes(x=iter, y=Kslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pKint_x <- ggplot(MCMC, aes(x=iter, y=Kint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
# Put all plotsa together in a matrix
mplot <- ggarrange(pRMSE, pr2, pTau_x, pCUE_x, pDesorb_x, pFPHYS_x, pVslope_x, pVint_x, pKslope_x, ncol=2, nrow=5, common.legend = TRUE, legend="bottom")
mplot
### Save matrix plot
ggsave(plot=mplot, filename = "MCMC_results_matrix.jpeg", width = 7, height = 9 , dpi = 600)
setwd("C:/github/MIMICS-RCrk/MIMICS-DP/MIMICS_MC")
### Get run parameter data
#MCd <- read.csv("20210514_040652_BruteMIM-50000.csv")
MC <- readRDS("20210514_151332_BruteMIM-1e+05.rds")
### Get run parameter data
#MCd <- read.csv("20210514_040652_BruteMIM-50000.csv")
MC <- readRDS("20210514_101522_BruteMIM-1e+05.rds")
MC_stats <- MC %>% group_by(run_num) %>% summarize(RMSE = rmse(SOC, MIMSOC),
MICpropSOC = mean(MIMMIC)/mean(MIMSOC),
LITpropSOC = mean(MIMLIT)/mean(MIMSOC))
MCd <- MC %>% left_join(MC_stats)
#Filter MC runs by microbe and litter pool ranges
MCpf <- MCd %>% filter(between(MICpropSOC, 0.005, 0.08)) %>%
filter(between(LITpropSOC, 0.005, 0.35))
#Take the top 1% of runs based on RMSE
MCf <- MCpf %>% arrange(RMSE)
MCf <- MCf[1:(nrow(MCf)/100),]
#Add run number identifier
MCf$run_num <- seq(1, nrow(MCf), 1)
#Set df name
parms <- MCf
library(ggplot2)
library(GGally)
library(tidyverse)
library(ggplot2)
library(Metrics)
setwd("C:/github/MIMICS-RCrk/MIMICS-DP/MIMICS_MC")
### Get run parameter data
#MCd <- read.csv("20210514_040652_BruteMIM-50000.csv")
MC <- readRDS("20210514_151332_BruteMIM-1e+05.rds")
#Get summary statistics
MC_stats <- MC %>% group_by(run_num) %>% summarize(RMSE = rmse(SOC, MIMSOC),
MICpropSOC = mean(MIMMIC)/mean(MIMSOC),
LITpropSOC = mean(MIMLIT)/mean(MIMSOC))
MCd <- MC %>% left_join(MC_stats)
#Filter MC runs by microbe and litter pool ranges
MCpf <- MCd %>% filter(between(MICpropSOC, 0.005, 0.08)) %>%
filter(between(LITpropSOC, 0.005, 0.35))
#Take the top 1% of runs based on RMSE
MCf <- MCpf %>% arrange(RMSE)
MCf <- MCf[1:(nrow(MCf)/100),]
#Add run number identifier
MCf$run_num <- seq(1, nrow(MCf), 1)
#Set df name
parms <- MCf
library(ggthemr)
ggthemr('light', type='outer')
View(parms)
#Set df name
parms <- MCf[,27:35]
# Remove duplicate rows
parms <- parms[!duplicated(parms)]
# Remove duplicate rows
parms <- parms[!duplicated(parms),]
library(ggplot2)
library(GGally)
library(ggthemr)
ggthemr('light', type='outer')
p <- GGally::ggscatmat(parms, columns=1:8, color="RMSE") +
scale_colour_ggthemr_d() +
theme(legend.position="bottom")
p
p <- GGally::ggscatmat(parms, columns=1:8) +
scale_colour_ggthemr_d() +
theme(legend.position="bottom")
p
p <- GGally::ggscatmat(parms, columns=1:8, alpha=0.1) +
scale_colour_ggthemr_d() +
theme(legend.position="bottom")
p
p <- GGally::ggscatmat(parms, columns=1:8, alpha=0.3) +
scale_colour_ggthemr_d() +
theme(legend.position="bottom")
p
p <- GGally::ggscatmat(parms, columns=1:8, alpha=0.5) +
scale_colour_ggthemr_d() +
theme(legend.position="bottom")
p
p <- GGally::ggscatmat(parms, columns=1:8, alpha=0.4) +
scale_colour_ggthemr_d() +
theme(legend.position="bottom")
p
ggsave("MIMICS_MC_parm_pairs.png", p, width = 7, height = 7, dpi = 1000)
p <- GGally::ggscatmat(parms, columns=1:8, alpha=0.4) +
scale_colour_ggthemr_d() + no_major_gridlines() +
theme(legend.position="bottom")
p
ggsave("MIMICS_MC_parm_pairs.png", p, width = 7, height = 7, dpi = 1000)
by_point <-MCf %>% arrange(SOC_resid) %>%
group_by(Site) %>%
mutate(rank = rank(SOC_resid, ties.method = "first"))
#Rank parameterizations by RMSE for each field SOC data point
MCf$SOC_resid <- MCf$SOC-parms$MIMSOC
MC <- readRDS("20210514_151332_BruteMIM-1e+05.rds")
#Get summary statistics
MC_stats <- MC %>% group_by(run_num) %>% summarize(RMSE = rmse(SOC, MIMSOC),
MICpropSOC = mean(MIMMIC)/mean(MIMSOC),
LITpropSOC = mean(MIMLIT)/mean(MIMSOC))
MCd <- MC %>% left_join(MC_stats)
#Filter MC runs by microbe and litter pool ranges
MCpf <- MCd %>% filter(between(MICpropSOC, 0.005, 0.08)) %>%
filter(between(LITpropSOC, 0.005, 0.35))
#Take the top 1% of runs based on RMSE
MCf <- MCpf %>% arrange(RMSE)
MCf <- MCf[1:(nrow(MCf)/100),]
#Add run number identifier
MCf$run_num <- seq(1, nrow(MCf), 1)
#Rank parameterizations by RMSE for each field SOC data point
MCf$SOC_resid <- MCf$SOC-MCf$MIMSOC
by_point <-MCf %>% arrange(SOC_resid) %>%
group_by(Site) %>%
mutate(rank = rank(SOC_resid, ties.method = "first"))
#matrix plot
pairs(by_point[,27:39],
col = alpha("blue", 0.03),                                         # Change color
pch = 18,                                            # Change shape of points
#labels = c("Vslope", "var2", "var3"),                  # Change labels of diagonal
main = "MIMICS Monte Carlo Top 1% Lowest RMSE",
upper.panel = NULL)
View(parms)
p <- GGally::ggscatmat(parms[1:(nrow(parms)/2)], columns=1:8, alpha=0.4) +
scale_colour_ggthemr_d() + no_major_gridlines() +
theme(legend.position="bottom")
p <- GGally::ggscatmat(parms[1:(nrow(parms)/2),], columns=1:8, alpha=0.4) +
scale_colour_ggthemr_d() + no_major_gridlines() +
theme(legend.position="bottom")
p
### Save a parameter set for mapping (Top 0.5%)
p2 <- GGally::ggscatmat(parms[1:(nrow(parms)/2),], columns=1:8, alpha=0.4) +
scale_colour_ggthemr_d() + no_major_gridlines() +
theme(legend.position="bottom")
p2
ggsave("MIMICS_MC_parms_for_maps.png", p2, width = 7, height = 7, dpi = 1000)
saveRDS(parms[1:(nrow(parms)/2),], "MIMICS_MC_parms_for_maps.rds")
### Save a parameter set for mapping (Top 0.5%)
parms_for_maps <- parms[1:(nrow(parms)/2),]
library(tidyverse)
library(grid)
library(gridExtra)
library(scales) #<-- for plot colors
library(ggpubr)
library(ggthemes)
library(ggplot2)
#library(devtools)
#devtools::install_github('Mikata-Project/ggthemr')
library(ggthemr)
### See plot themes @ https://github.com/Mikata-Project/ggthemr#installation
setwd("C:/github/MIMICS-RCrk/MIMICS-DP/MIMICS_MCMC/MCMC_results/Pcombos")
### Load all MCMC output csv files from directory
filenames <- list.files(pattern=".*csv")
## Create list of data frame names without the ".csv" part
names <-paste0("MCMC", seq(1,length(filenames)))
### Load all files
for(i in 1:length(names)){
assign(names[i], read.csv(filenames[i], as.is=T))
}
### Add identifier column
MCMC1$ID = "Run 1"
MCMC2$ID = "Run 2"
MCMC3$ID = "Run 3"
MCMC4$ID = "Run 4"
MCMC5$ID = "Run 5"
### Row bind all the MCMC dataframe
MCMC <- MCMC1 %>% rbind(MCMC2) %>%
rbind(MCMC3) %>%
rbind(MCMC4) %>%
rbind(MCMC5) %>%
filter(improve == 1)
### Create plot of parameter MCMC walks
colourCount = length(names)
ggthemr('light', type='outer')
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + scale_colour_ggthemr_d() #+ theme_minimal() +
#scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pr2 <- ggplot(MCMC, aes(x=iter, y=r2, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pTau_x <- ggplot(MCMC, aes(x=iter, y=Tau_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pCUE_x <-ggplot(MCMC, aes(x=iter, y=CUE_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pDesorb_x <- ggplot(MCMC, aes(x=iter, y=desorb_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pFPHYS_x <- ggplot(MCMC, aes(x=iter, y=fPHYS_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pVslope_x <- ggplot(MCMC, aes(x=iter, y=Vslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pVint_x <- ggplot(MCMC, aes(x=iter, y=Vint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pKslope_x <- ggplot(MCMC, aes(x=iter, y=Kslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pKint_x <- ggplot(MCMC, aes(x=iter, y=Kint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
# Put all plotsa together in a matrix
mplot <- ggarrange(pTau_x, pCUE_x, pDesorb_x, pFPHYS_x, pVslope_x, pVint_x, pKslope_x, pRMSE, pr2, ncol=3, nrow=3, common.legend = TRUE, legend="bottom")
mplot
### Save matrix plot
ggsave(plot=mplot, filename = "MCMC_results_matrix.jpeg", width = 7, height = 9 , dpi = 600)
### Save matrix plot
ggsave(plot=mplot, filename = "MCMC_results_matrix.jpeg", width = 10, height = 10 , dpi = 1000)
### Save matrix plot
ggsave(plot=mplot, filename = "MCMC_results_matrix.jpeg", width = 14, height = 10 , dpi = 1000)
### Save matrix plot
ggsave(plot=mplot, filename = "MCMC_results_matrix.jpeg", width = 14, height = 8 , dpi = 1000)
library(ggplot2)
library(Metrics)
library(dplyr)
library(ggpubr)
setwd("C:/github/MIMICS_HiRes")
source("Figures/plot_theme.R")
HPCdata_raw <- readRDS("MCMC-2/MC_output/20210726_143814_MIM_MCMC_pCombos-5000.csv")
HPCdata_raw <- readRDS("MCMC-2/Output/20210726_143814_MIM_MCMC_pCombos-5000.csv")
HPCdata_raw <- read.csv("MCMC-2/Output/20210726_143814_MIM_MCMC_pCombos-5000.csv")
HPCdata <- HPCdata_raw
library(ggplot2)
library(Metrics)
library(dplyr)
library(ggpubr)
#set working drive & bring in plot theme
setwd("C:/github/MIMICS_HiRes")
source("Figures/plot_theme.R")
#Load output file from MCMC script
MCMCdata<- read.csv("MCMC-2/Output/20210726_143814_MIM_MCMC_pCombos-5000.csv")
# Calc RMSE for all runs
stats <- MCMCdata %>% group_by(run_num) %>% summarize(RMSE = rmse(SOC, MIMSOC),
MICtoSOC = mean(MIMMIC/MIMSOC),
LITtoSOC = mean(MIMLIT/MIMSOC))
# Round off RMSE values
stats$RMSE <- round(stats$RMSE,3)
# Join RMSE values to MCMC dataframe
MCMCdata <- MCMCdata %>% left_join(stats)
setwd("C:/github/MIMICS_HiRes?MCMC-2")
setwd("C:/github/MIMICS_HiRes/MCMC-2")
?list.files
### Load all MCMC output csv files from directory
filenames <- list.files(path="Output/",pattern=".*csv")
filenames
### Load all files
for(i in 1:length(names)){
assign(names[i], read.csv(filenames[i], as.is=T))
}
### Add identifier column
MCMC1$ID = "Run 1"
## Create list of data frame names without the ".csv" part
names <-paste0("MCMC", seq(1,length(filenames)))
### Load all files
for(i in 1:length(names)){
assign(names[i], read.csv(filenames[i], as.is=T))
}
assign(names[i], read.csv(paste0("Output/",filenames[i]), as.is=T))
### Load all files
MCMC <- as.data.frame()
### Load all files
MCMC <- NULL
library(tidyverse)
library(grid)
library(gridExtra)
library(scales) #<-- for plot colors
library(ggpubr)
library(ggthemes)
library(ggplot2)
#library(devtools)
#devtools::install_github('Mikata-Project/ggthemr')
library(ggthemr)
### See plot themes @ https://github.com/Mikata-Project/ggthemr#installation
setwd("C:/github/MIMICS_HiRes/MCMC-2")
### Load all MCMC output csv files from directory
filenames <- list.files(path="Output/",pattern=".*csv")
## Create list of data frame names without the ".csv" part
names <-paste0("MCMC", seq(1,length(filenames)))
### Load all files
for(i in 1:length(names)){
data_in <- read.csv(paste0("Output/",filenames[i]), as.is=T)
data_in$ID = paste0("Run ", as.character(i))
#assign(names[i], MC_data)
if(i == 1) {
MCMC_data <- data_in
} else {
MCMC <- rbind(MCMC, data_in)
}
}
### Filter MCMC data to only include steps that improved RMSE
MCMC <- MCMC %>% filter(improve == 1)
### Create plot of parameter MCMC walks
colourCount = length(names)
ggthemr('light', type='outer')
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + scale_colour_ggthemr_d() #+ theme_minimal() +
#scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pr2 <- ggplot(MCMC, aes(x=iter, y=r2, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pTau_x <- ggplot(MCMC, aes(x=iter, y=Tau_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pCUE_x <-ggplot(MCMC, aes(x=iter, y=CUE_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pDesorb_x <- ggplot(MCMC, aes(x=iter, y=desorb_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pFPHYS_x <- ggplot(MCMC, aes(x=iter, y=fPHYS_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pVslope_x <- ggplot(MCMC, aes(x=iter, y=Vslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pVint_x <- ggplot(MCMC, aes(x=iter, y=Vint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pKslope_x <- ggplot(MCMC, aes(x=iter, y=Kslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pKint_x <- ggplot(MCMC, aes(x=iter, y=Kint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
# Put all plotsa together in a matrix
mplot <- ggarrange(pTau_x, pCUE_x, pDesorb_x, pFPHYS_x, pVslope_x, pVint_x, pKslope_x, pRMSE, pr2, ncol=3, nrow=3, common.legend = TRUE, legend="bottom")
mplot
### Save matrix plot
#ggsave(plot=mplot, filename = "MCMC_results_matrix.jpeg", width = 14, height = 8 , dpi = 1000)
library(tidyverse)
library(grid)
library(gridExtra)
library(scales) #<-- for plot colors
library(ggpubr)
library(ggthemes)
library(ggplot2)
#library(devtools)
#devtools::install_github('Mikata-Project/ggthemr')
library(ggthemr)
### See plot themes @ https://github.com/Mikata-Project/ggthemr#installation
setwd("C:/github/MIMICS_HiRes/MCMC-2")
### Load all MCMC output csv files from directory
filenames <- list.files(path="Output/",pattern=".*csv")
## Create list of data frame names without the ".csv" part
names <-paste0("MCMC", seq(1,length(filenames)))
### Load all files
for(i in 1:length(names)){
data_in <- read.csv(paste0("Output/",filenames[i]), as.is=T)
data_in$ID = paste0("Run ", as.character(i))
#assign(names[i], MC_data)
if(i == 1) {
MCMC <- data_in
} else {
MCMC <- rbind(MCMC, data_in)
}
}
### Filter MCMC data to only include steps that improved RMSE
MCMC <- MCMC %>% filter(improve == 1)
### Create plot of parameter MCMC walks
colourCount = length(names)
ggthemr('light', type='outer')
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + scale_colour_ggthemr_d() #+ theme_minimal() +
#scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pr2 <- ggplot(MCMC, aes(x=iter, y=r2, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pTau_x <- ggplot(MCMC, aes(x=iter, y=Tau_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pCUE_x <-ggplot(MCMC, aes(x=iter, y=CUE_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pDesorb_x <- ggplot(MCMC, aes(x=iter, y=desorb_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pFPHYS_x <- ggplot(MCMC, aes(x=iter, y=fPHYS_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pVslope_x <- ggplot(MCMC, aes(x=iter, y=Vslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pVint_x <- ggplot(MCMC, aes(x=iter, y=Vint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pKslope_x <- ggplot(MCMC, aes(x=iter, y=Kslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
pKint_x <- ggplot(MCMC, aes(x=iter, y=Kint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + scale_colour_ggthemr_d()
# Put all plotsa together in a matrix
mplot <- ggarrange(pTau_x, pCUE_x, pDesorb_x, pFPHYS_x, pVslope_x, pVint_x, pKslope_x, pRMSE, pr2, ncol=3, nrow=3, common.legend = TRUE, legend="bottom")
mplot
### Save matrix plot
#ggsave(plot=mplot, filename = "MCMC_results_matrix.jpeg", width = 14, height = 8 , dpi = 1000)
pRMSE
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pRMSE
colourCount = length(names)
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pr2 <- ggplot(MCMC, aes(x=iter, y=r2, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pTau_x <- ggplot(MCMC, aes(x=iter, y=Tau_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pCUE_x <-ggplot(MCMC, aes(x=iter, y=CUE_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pDesorb_x <- ggplot(MCMC, aes(x=iter, y=desorb_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pFPHYS_x <- ggplot(MCMC, aes(x=iter, y=fPHYS_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pVslope_x <- ggplot(MCMC, aes(x=iter, y=Vslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pVint_x <- ggplot(MCMC, aes(x=iter, y=Vint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pKslope_x <- ggplot(MCMC, aes(x=iter, y=Kslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pKint_x <- ggplot(MCMC, aes(x=iter, y=Kint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
# Put all plotsa together in a matrix
mplot <- ggarrange(pTau_x, pCUE_x, pDesorb_x, pFPHYS_x, pVslope_x, pVint_x, pKslope_x, pRMSE, pr2, ncol=3, nrow=3, common.legend = TRUE, legend="bottom")
mplot
View(MCMC)
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + theme_minimal() + ylim(1.5,1.8)
pRMSE
View(MCMC)
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + theme_minimal() + ylim(1.5,2.0)
pRMSE
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + theme_minimal() + ylim(1.5,2.0) +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + theme_minimal() + ylim(1.5,2.0) +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pRMSE
library(tidyverse)
library(grid)
library(gridExtra)
library(scales) #<-- for plot colors
library(ggpubr)
library(ggthemes)
library(ggplot2)
#library(devtools)
#devtools::install_github('Mikata-Project/ggthemr')
library(ggthemr)
### See plot themes @ https://github.com/Mikata-Project/ggthemr#installation
setwd("C:/github/MIMICS_HiRes/MCMC-2")
### Load all MCMC output csv files from directory
filenames <- list.files(path="Output/",pattern=".*csv")
## Create list of data frame names without the ".csv" part
names <-paste0("MCMC", seq(1,length(filenames)))
### Load all files
for(i in 1:length(names)){
data_in <- read.csv(paste0("Output/",filenames[i]), as.is=T)
data_in$ID = paste0("Run ", as.character(i))
#assign(names[i], MC_data)
if(i == 1) {
MCMC <- data_in
} else {
MCMC <- rbind(MCMC, data_in)
}
}
### Filter MCMC data to only include steps that improved RMSE
MCMC <- MCMC %>% filter(improve == 1)
### Create plot of parameter MCMC walks
colourCount = length(names)
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pr2 <- ggplot(MCMC, aes(x=iter, y=r2, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pTau_x <- ggplot(MCMC, aes(x=iter, y=Tau_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pCUE_x <-ggplot(MCMC, aes(x=iter, y=CUE_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pDesorb_x <- ggplot(MCMC, aes(x=iter, y=desorb_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pFPHYS_x <- ggplot(MCMC, aes(x=iter, y=fPHYS_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pVslope_x <- ggplot(MCMC, aes(x=iter, y=Vslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pVint_x <- ggplot(MCMC, aes(x=iter, y=Vint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pKslope_x <- ggplot(MCMC, aes(x=iter, y=Kslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pKint_x <- ggplot(MCMC, aes(x=iter, y=Kint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
# Put all plotsa together in a matrix
mplot <- ggarrange(pTau_x, pCUE_x, pDesorb_x, pFPHYS_x, pVslope_x, pVint_x, pKslope_x, pRMSE, pr2, ncol=3, nrow=3, common.legend = TRUE, legend="bottom")
mplot
### Save matrix plot
#ggsave(plot=mplot, filename = "MCMC_results_matrix.jpeg", width = 14, height = 8 , dpi = 1000)
View(MCMC)
### Save matrix plot
sys.time()
library(tidyverse)
library(grid)
library(gridExtra)
library(scales) #<-- for plot colors
library(ggpubr)
library(ggthemes)
library(ggplot2)
setwd("C:/github/MIMICS_HiRes/MCMC")
### Load all MCMC output csv files from directory
filenames <- list.files(path="Output/",pattern=".*csv")
## Create list of data frame names without the ".csv" part
names <-paste0("MCMC", seq(1,length(filenames)))
### Load all files
for(i in 1:length(names)){
data_in <- read.csv(paste0("Output/",filenames[i]), as.is=T)
data_in$ID = paste0("Run ", as.character(i))
#assign(names[i], MC_data)
if(i == 1) {
MCMC <- data_in
} else {
MCMC <- rbind(MCMC, data_in)
}
}
### Filter MCMC data to only include steps that improved RMSE
MCMC <- MCMC %>% filter(improve == 1)
### Create plot of parameter MCMC walks
colourCount = length(names)
pRMSE <- ggplot(MCMC, aes(x=iter, y=RMSE, colour=factor(ID))) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5) + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pr2 <- ggplot(MCMC, aes(x=iter, y=r2, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pTau_x <- ggplot(MCMC, aes(x=iter, y=Tau_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pCUE_x <-ggplot(MCMC, aes(x=iter, y=CUE_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pDesorb_x <- ggplot(MCMC, aes(x=iter, y=desorb_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pFPHYS_x <- ggplot(MCMC, aes(x=iter, y=fPHYS_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pVslope_x <- ggplot(MCMC, aes(x=iter, y=Vslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pVint_x <- ggplot(MCMC, aes(x=iter, y=Vint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pKslope_x <- ggplot(MCMC, aes(x=iter, y=Kslope_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
pKint_x <- ggplot(MCMC, aes(x=iter, y=Kint_x, color=ID)) + geom_line(alpha=0.5) + geom_point(size=2, alpha=0.5)  + geom_line(size=1) + theme_minimal() +
scale_color_manual(values = colorRampPalette(solarized_pal()(8))(colourCount),guide = guide_legend(nrow=2))
# Put all plotsa together in a matrix
mplot <- ggarrange(pTau_x, pCUE_x, pDesorb_x, pFPHYS_x, pVslope_x, pVint_x, pKslope_x, pRMSE, pr2, ncol=3, nrow=3, common.legend = TRUE, legend="bottom")
mplot
### Save matrix plot
#ggsave(plot=mplot, filename = paste0("Post_MCMC_Analysis/Plots/MCMC_results_matrix", format(Sys.time(), "%Y%m%d_%H%M%S_"),".jpeg"), width = 14, height = 8 , dpi = 1000)
ggsave(plot=mplot, filename = paste0("Post_MCMC_Analysis/Plots/MCMC_results_matrix", format(Sys.time(), "%Y%m%d_%H%M%S_"),".jpeg"), width = 14, height = 8 , dpi = 1000)
